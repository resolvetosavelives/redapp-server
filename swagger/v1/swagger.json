{
  "swagger": "2.0",
  "basePath": "/api/v1",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "info": {
    "description": "# API specification for RedApp\n## Sync APIs\nThis API spec documents the endpoints that the devices (that are offline to varying levels) will use to sync data. The sync end points will send and receive bulk (a list of) entities. Both sending and receiving can be batched with configurable batch-sizes to accommodate low network bandwidth situations.\n## Nesting resources\nThe APIs have been designed to provide an optimal balance between accuracy and simplicity. Some of the APIs (patients) will be nested, and some other (blood pressures) will be flat.\n## Authentication\nTODO\n\n## Sync Mechanism\nRefer to the [related ADR](https://github.com/resolvetosavelives/redapp-server/blob/master/doc/arch/001-synchronization.md).\n",
    "version": "v1",
    "title": "RedApp Server",
    "x-logo": {
      "url": "/assets/rtsl_logo-d7e4808e72f6d12641fd4a4f64669ed76d32170cd7a1e7fb9206ef7d1ba413c9.png",
      "backgroundColor": "#FFFFFF"
    },
    "contact": {
      "email": "eng-backend@resolvetosavelives.org"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/resolvetosavelives/redapp-server/blob/master/LICENSE"
    }
  },
  "paths": {
    "/patients/sync": {
      "post": {
        "summary": "Syncs patient, address and phone number data from device to server.",
        "tags": [
          "patient"
        ],
        "parameters": [
          {
            "name": "patients",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "patients": {
                  "$ref": "#/definitions/nested_patients"
                }
              },
              "required": [
                "patients"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "some, or no errors were found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error_spec"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Syncs patient, address and phone number data from server to device.",
        "tags": [
          "patient"
        ],
        "parameters": [
          {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp since which records have been processed by the server.\n                    Use the server returned value in the next request to continue fetching records.",
            "name": "processed_since",
            "in": "query"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "Number of record to retrieve (a.k.a batch-size)"
          }
        ],
        "responses": {
          "200": {
            "description": "patients received",
            "schema": {
              "type": "object",
              "properties": {
                "patients": {
                  "$ref": "#/definitions/nested_patients"
                },
                "processed_since": {
                  "$ref": "#/definitions/processed_since"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp with millisecond precision"
    },
    "nullable_timestamp": {
      "type": [
        "string",
        "null"
      ],
      "format": "date-time",
      "description": "Timestamp with millisecond precision"
    },
    "processed_since": {
      "type": "string",
      "format": "date-time",
      "description": "The timestamp since which records have been processed by the server.\n                    Use the server returned value in the next request to continue fetching records.",
      "name": "processed_since"
    },
    "patient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "gender": {
          "type": "string",
          "enum": [
            "male",
            "female",
            "transgender"
          ]
        },
        "full_name": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "dead",
            "migrated",
            "unresponsive",
            "inactive"
          ]
        },
        "date_of_birth": {
          "type": [
            "string",
            "null"
          ],
          "format": "date"
        },
        "age": {
          "type": [
            "integer",
            "null"
          ],
          "description": "When age is present, age_updated_at must be present as well."
        },
        "age_updated_at": {
          "$ref": "#/definitions/nullable_timestamp"
        },
        "created_at": {
          "$ref": "#/definitions/timestamp"
        },
        "updated_at": {
          "$ref": "#/definitions/timestamp"
        }
      },
      "required": [
        "id",
        "gender",
        "full_name",
        "created_at",
        "updated_at",
        "status"
      ]
    },
    "address": {
      "type": [
        "null",
        "object"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "street_address": {
          "type": "string"
        },
        "village_or_colony": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "created_at": {
          "$ref": "#/definitions/timestamp"
        },
        "updated_at": {
          "$ref": "#/definitions/timestamp"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at"
      ]
    },
    "phone_number": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "number": {
          "type": "string"
        },
        "phone_type": {
          "type": "string",
          "enum": [
            "mobile",
            "landline"
          ]
        },
        "active": {
          "type": "boolean"
        },
        "created_at": {
          "$ref": "#/definitions/timestamp"
        },
        "updated_at": {
          "$ref": "#/definitions/timestamp"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at",
        "number"
      ]
    },
    "phone_numbers": {
      "type": [
        "null",
        "array"
      ],
      "items": {
        "$ref": "#/definitions/phone_number"
      }
    },
    "nested_patient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "gender": {
          "type": "string",
          "enum": [
            "male",
            "female",
            "transgender"
          ]
        },
        "full_name": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "dead",
            "migrated",
            "unresponsive",
            "inactive"
          ]
        },
        "date_of_birth": {
          "type": [
            "string",
            "null"
          ],
          "format": "date"
        },
        "age": {
          "type": [
            "integer",
            "null"
          ],
          "description": "When age is present, age_updated_at must be present as well."
        },
        "age_updated_at": {
          "$ref": "#/definitions/nullable_timestamp"
        },
        "created_at": {
          "$ref": "#/definitions/timestamp"
        },
        "updated_at": {
          "$ref": "#/definitions/timestamp"
        },
        "address": {
          "$ref": "#/definitions/address"
        },
        "phone_numbers": {
          "$ref": "#/definitions/phone_numbers"
        }
      },
      "required": [
        "id",
        "gender",
        "full_name",
        "created_at",
        "updated_at",
        "status"
      ]
    },
    "nested_patients": {
      "type": "array",
      "description": "List of patients with address and phone numbers nested.",
      "items": {
        "$ref": "#/definitions/nested_patient"
      }
    },
    "error_spec": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Id of the record with errors"
        },
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of json schema error strings describing validation errors"
        },
        "field_with_error": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}