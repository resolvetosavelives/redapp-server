<!-- Header -->
<div class="mb-2 pt-4 px-4 md:flex md:items-center md:justify-between md:max-w-6xl md:m-auto">
  <div>
    <div class="flex items-center mb-4">
      <div class="mr-2">
        <p class="font-roboto font-bold text-sm text-blue-200">
          All states
        </p>
      </div>
      <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
        <path d="M3.26651 1.26308C2.91116 1.61235 2.91116 2.17655 3.26651 2.52581L6.80182 6.00056L3.26651 9.47532C2.91116 9.82458 2.91116 10.3888 3.26651 10.738C3.62187 11.0873 4.1959 11.0873 4.55125 10.738L8.73349 6.62745C9.08884 6.27819 9.08884 5.71399 8.73349 5.36472L4.55125 1.25412C4.20501 0.913814 3.62187 0.913814 3.26651 1.26308Z" fill="black" fill-opacity="0.18"/>
      </svg>
      <div class="mr-2 ml-2">
        <p class="font-roboto font-bold text-sm text-blue-200">
          <%= @state_name %>
        </p>
      </div>
      <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
        <path d="M3.26651 1.26308C2.91116 1.61235 2.91116 2.17655 3.26651 2.52581L6.80182 6.00056L3.26651 9.47532C2.91116 9.82458 2.91116 10.3888 3.26651 10.738C3.62187 11.0873 4.1959 11.0873 4.55125 10.738L8.73349 6.62745C9.08884 6.27819 9.08884 5.71399 8.73349 5.36472L4.55125 1.25412C4.20501 0.913814 3.62187 0.913814 3.26651 1.26308Z" fill="black" fill-opacity="0.18"/>
      </svg>
      <div class="ml-1">
        <p class="font-roboto font-bold text-sm text-black">
          <%= @district_name %>
        </p>
      </div>
    </div>
    <h1 class="font-roboto font-bold text-4xl text-black">
      <%= @district_name %>
    </h1>
    <div class="flex items-center mb-2">
      <div class="mr-1">
        <p class="font-roboto font-bold text-lg text-black">
          Monthly report for <%= @report_period %>
        </p>
      </div>
      <div>
        <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
          <path d="M2.33031 5.23408L5.21591 8.61786C5.65042 9.12738 6.35232 9.12738 6.78684 8.61786L9.67243 5.23408C10.3743 4.411 9.87298 3 8.8814 3H3.11021C2.11863 3 1.62841 4.411 2.33031 5.23408Z" fill="black" fill-opacity="0.54"/>
        </svg>
      </div>
    </div>
  </div>
  <div>
    <div class="hidden md:flex md:flex-col md:items-end md:justify-end md:mb-2">
      <div class="md:mr-0 md:mb-2">
        <p class="font-roboto font-bold text-sm text-blue-200 uppercase tracking-wider">
          Print
        </p>
      </div>
      <div>
        <p class="font-roboto font-bold text-sm text-blue-200 uppercase tracking-wider">
          Download data
        </p>
      </div>
    </div>
    <p class="font-roboto font-normal text-sm text-grey-400">
      Last updated <%= @last_updated %>
    </p>
  </div>
</div>
<!-- Cards -->
<div class="pt-4 px-4 md:flex md:flex-wrap md:max-w-6xl md:m-auto">
  <!-- Controlled patients trend -->
  <div class="md:w-1/2 md:pr-2">
    <div class="mb-4 p-4 rounded-md bg-white shadow-md md:flex md:flex-col md:justify-between md:h-96">
      <div>
        <div class="mb-4">
          <p class="mb-1 font-roboto font-bold text-lg text-black">
            Controlled patients trend
          </p>
          <p class="font-roboto font-normal text-sm text-black md:w-2/3">
            Registered HTN patients with BP &lt;140/90 at their most recent visit in the last 3 months
          </p>
        </div>
        <div>
          <p class="font-roboto font-bold text-3xl text-green-200">
            <%= number_with_delimiter(@controlled_patients.values.last, :delimiter => ",") %> patients
          </p>
          <p class="font-roboto font-normal text-sm text-black">
            <% controlled_patient_trend_percentage = ((@controlled_patients.values.last.to_f/@hypertensive_population.to_f)*100).round(2) %>
            <% formatted_htn_pop = number_with_delimiter(@hypertensive_population, :delimiter => ",") %>
            <span class="font-bold"><%= controlled_patient_trend_percentage %>%</span> of estimated <%= formatted_htn_pop %> hypertensive population
          </p>
        </div>
      </div>
      <div>
        <div class="md:relative md:h-32">
          <canvas id="controlledPatientsTrend"></canvas>
        </div>
        <div class="flex justify-between mt-2">
          <div>
            <p class="font-roboto font-bold text-sm text-black">
              Start
            </p>
            <p class="font-roboto font-normal text-sm text-black">
              <%= @controlled_patients.keys[0] %>
            </p>
          </div>
          <div class="text-right">
            <p class="font-roboto font-bold text-sm text-black">
              Current
            </p>
            <p class="font-roboto font-normal text-sm text-black">
              <% total_controlled_patient_periods = @controlled_patients.length - 1 %>
              <%= @controlled_patients.keys[total_controlled_patient_periods] %>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Control rate of all registered HTN patients -->
  <div class="md:w-1/2 md:pl-2">
    <div class="mb-4 p-4 rounded-md bg-white shadow-md md:flex md:flex-col md:justify-between md:h-96">
      <div class="mb-4">
        <p class="mb-1 font-roboto font-bold text-lg text-black">
          Control rate of all registered HTN patients
        </p>
        <p class="font-roboto font-normal text-sm text-black md:w-2/3">
          Proportion of registered HTN patients with BP &lt;140/90 at their most recent visit in the last 3 months
        </p>
      </div>
      <div class="mt-8 md:flex-grow md:flex md:items-center md:justify-between md:mt-0">
        <div class="mb-6 text-center md:flex-grow md:mb-0">
          <p class="font-roboto font-bold leading-tight text-6xl text-green-200 md:h-20 md:mb-4">
            <%= @control_rate.values.last.to_f %>%
          </p>
          <p class="font-roboto font-bold text-xl text-black md:text-sm">
            <%= number_with_delimiter(@controlled_patients.values.last, :delimiter => ",") %> of <%= number_with_delimiter(@registrations.values.last, :delimiter => ",") %> patients
          </p>
        </div>
        <div class="mb-4 md:flex md:flex-col md:items-center md:flex-grow">
          <div class="relative ml-auto mr-auto h-20 w-1/2 md:h-20 md:w-2/3 md:mb-6">
            <canvas id="controlRateOfAllRegisteredPatients"></canvas>
          </div>
          <p class="font-roboto text-center text-sm md:text-sm md:font-medium md:mt-1">
            Last 12 months
          </p>
        </div>
      </div>
    </div>
  </div>
  <!-- Cumulative registration -->
  <div class="md:w-1/2 md:pr-2">
    <div class="mb-4 p-4 rounded-md bg-white shadow-md md:flex md:flex-col md:justify-between md:h-96">
      <div>
        <div class="mb-4">
          <p class="mb-1 font-roboto font-bold text-lg text-black">
            Cumulative registrations
          </p>
          <p class="font-roboto font-normal text-sm text-black md:w-2/3">
            Total number of HTN patient registrations across all facilities
          </p>
        </div>
        <div>
          <p class="font-roboto font-bold text-3xl text-purple-200">
            <%= number_with_delimiter(@registrations.values.last, :delimiter => ",") %> patients
          </p>
          <p class="font-roboto font-normal text-sm text-black">
            <% formatted_htn_pop = number_with_delimiter(@hypertensive_population, :delimiter => ",") %>
            <% cumulative_registrations_percentage = ((@registrations.values.last.to_f/@hypertensive_population.to_f)*100).round(2) %>
            <span class="font-bold"><%= cumulative_registrations_percentage %>%</span> of estimated <%= formatted_htn_pop %> hypertensive population
          </p>
        </div>
      </div>
      <div>
        <div class="md:relative md:h-32">
          <canvas id="cumulativeRegistrations"></canvas>
        </div>
        <div class="flex justify-between mt-2">
          <div>
            <p class="font-roboto font-bold text-sm text-black">
              Start
            </p>
            <p class="font-roboto font-normal text-sm text-black">
              <%= @registrations.keys[0] %>
            </p>
          </div>
          <div class="text-right">
            <p class="font-roboto font-bold text-sm text-black">
              Current
            </p>
            <p class="font-roboto font-normal text-sm text-black">
              <% total_controlled_patient_periods = @registrations.length - 1 %>
              <%= @registrations.keys[total_controlled_patient_periods] %>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Quarterly cohort trend -->
  <div class="md:w-1/2 md:pl-2">
    <div class="p-4 rounded-md bg-white shadow-md md:flex md:flex-col md:h-96">
      <div class="mb-4">
        <div class="mb-1">
          <p class="mb-1 font-roboto font-bold text-lg text-black">
            Quarterly cohort trend
          </p>
          <p class="font-roboto font-normal text-sm text-black md:w-2/3">
            The result for all HTN patients registered in a quarter at their follow-up visit in the following quarter
          </p>
        </div>
      </div>
      <div class="md:flex-grow">
       
        <% @quarterly_registrations.each_with_index do |cohort, index| %>
          <div class="mb-3 md:flex md:items-center">
            <div class="mb-2 md:mb-0 md:w-2/5">
              <p class="font-roboto font-bold text-sm text-black">
                <%= cohort["results_in"] %> results for patients
              </p>
              <p class="font-roboto font-medium text-sm text-black">
                registered in <%= cohort["patients_registered"] %>
              </p>
            </div>
            <div class="relative flex items-center w-full md:w-3/5">
              <div class="flex items-center justify-center h-8 bg-green-300 hover:bg-green-hover rounded-l md:h-10" style="box-sizing: content-box; padding: 0 4px; width: <%= cohort["cohort_trend"][0]["controlled"]["percent"] %>%;" data-element="bar-chart" data-id="<%= cohort["results_in"].parameterize %>-controlled">
                <p class="font-roboto font-bold text-sm text-white">
                  <%= cohort["cohort_trend"][0]["controlled"]["percent"] %>%
                </p>
                <div class="hidden absolute -top-74 p-3 text-center bg-black rounded-md md:-top-68" data-element="tooltip" data-id="<%= cohort["results_in"].parameterize %>-controlled" style="width: 160px;">
                  <p class="font-roboto font-medium text-sm text-white">
                    <%= cohort["cohort_trend"][0]["controlled"]["total"] %> patients visited with controlled BP
                  </p>
                  <span class="absolute right-0 left-0 w-2 h-2 my-0 mx-auto" style="border-left: 17px solid transparent; border-right: 17px solid transparent; border-top: 17px solid #000000;"></span>
                </div>
              </div>
              <div class="flex items-center justify-center h-8 bg-yellow-100 hover:bg-yellow-hover md:h-10" style="box-sizing: content-box; padding: 0 4px; width: <%= cohort["cohort_trend"][0]["uncontrolled"]["percent"] %>%;" data-element="bar-chart" data-id="<%= cohort["results_in"].parameterize %>-uncontrolled">
                <p class="font-roboto font-bold text-sm text-white" style="color: #AB8600;">
                   <%= cohort["cohort_trend"][0]["uncontrolled"]["percent"] %>%
                </p>
                <div class="hidden absolute -top-74 p-3 text-center bg-black rounded-md md:-top-68" data-element="tooltip" data-id="<%= cohort["results_in"].parameterize %>-uncontrolled" style="width: 160px;">
                  <p class="font-roboto font-medium text-sm text-white">
                    <%= cohort["cohort_trend"][0]["uncontrolled"]["total"] %> patients visited with uncontrolled BP
                  </p>
                  <span class="absolute right-0 left-0 w-2 h-2 my-0 mx-auto" style="border-left: 17px solid transparent; border-right: 17px solid transparent; border-top: 17px solid #000000;"></span>
                </div>
              </div>
              <div class="flex items-center justify-center h-8 bg-red-200 rounded-r hover:bg-red-hover md:h-10" style="box-sizing: content-box; padding: 0 4px; width: <%= cohort["cohort_trend"][0]["no_bp"]["percent"] %>%;" data-element="bar-chart" data-id="<%= cohort["results_in"].parameterize %>-no-bp">
                <p class="font-roboto font-bold text-sm text-white">
                    <%= cohort["cohort_trend"][0]["no_bp"]["percent"] %>%
                </p>
                <div class="hidden absolute -top-74 p-3 text-center bg-black rounded-md md:-top-68" data-element="tooltip" data-id="<%= cohort["results_in"].parameterize %>-no-bp" style="width: 160px;">
                  <p class="font-roboto font-medium text-sm text-white">
                    <%= cohort["cohort_trend"][0]["no_bp"]["total"] %> patients didn’t have a BP taken
                  </p>
                  <span class="absolute right-0 left-0 w-2 h-2 my-0 mx-auto" style="border-left: 17px solid transparent; border-right: 17px solid transparent; border-top: 17px solid #000000;"></span>
                </div>
              </div>
            </div>
          </div>
        <% end %>
        
      </div>
      <div class="flex pt-4 border-t border-grey-200 md:justify-end">
        <div class="flex items-center mr-6">
          <p class="font-roboto font-bold text-sm text-green-200 leading-tight">
            Visited and BP &lt;140/90
          </p>
        </div>
        <div class="flex items-center mr-6">
          <p class="font-roboto font-bold text-sm text-yellow-300 leading-tight" style="color: #AB8600;">
            Visited and BP &ge;140/90
          </p>
        </div>
        <div class="flex items-center">
          <p class="font-roboto font-bold text-sm text-red-200 leading-tight">
            No BP measure
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="pb-20 px-4 md:flex md:m-auto md:max-w-6xl">
  <div class="p-2 rounded-md bg-white shadow-md">
    <%= image_tag("screenshot.png") %>
  </div>
</div>
<script>
  // Data
  const controlledPatientData = JSON.parse('<%= raw(@controlled_patients.to_json) %>');
  const registrationsData = JSON.parse('<%= raw(@registrations.to_json) %>');
  const controlRateData = JSON.parse('<%= raw(@control_rate.to_json) %>');
  const quarterlyRegistrationsData = JSON.parse('<%= raw(@quarterly_registrations.to_json) %>');
  const controlledPatients = Object.entries(controlledPatientData);
  const registrations = Object.entries(registrationsData);
  const controlRate = Object.entries(controlRateData);
  // Controlled patients trend
  var controlledPatientsTrendCanvas =
    document.getElementById("controlledPatientsTrend").getContext("2d");
  var greenGradientFill =
    controlledPatientsTrendCanvas.createLinearGradient(0, 400, 0, -300);
  greenGradientFill.addColorStop(0, "rgba(81, 205, 130, 0)");
  greenGradientFill.addColorStop(1, "rgba(81, 205, 130, 0.2)");
  var controlledPatientsTrendChart = new Chart(
    controlledPatientsTrendCanvas,
    {
      type: "line",
      data: {
        labels: controlledPatients.map(key => key[0]),
        datasets: [{
          backgroundColor: greenGradientFill,
          borderColor: "rgba(81, 205, 130, 1)",
          data: controlledPatients.map(key => key[1]),
        }],
      },
      options: {
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        elements: {
          point: {
            pointStyle: "circle",
            backgroundColor: "rgba(81, 205, 130, 1)",
            hoverRadius: 5,
          },
        },
        legend: {
          display: false,
        },
        scales: {
          xAxes: [{
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
          yAxes: [{
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
        },
        tooltips: {
          titleFontFamily: "Roboto",
          bodyFontFamily: "Roboto",
          backgroundColor: "rgb(0, 0, 0)",
          titleFontSize: 16,
          bodyFontSize: 14,
          displayColors: false,
          yPadding: 12,
          xPadding: 12,
          callbacks: {
            label: function(tooltipItem, data) {
              var value = tooltipItem.value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
              value += " controlled patients";
              return value;
            },
          },
        }
      }
    }
  );
  // Cumulative registrations
  var cumulativeRegistrationsCanvas =
    document.getElementById("cumulativeRegistrations").getContext("2d");
  var purpleGradientFill =
    cumulativeRegistrationsCanvas.createLinearGradient(0, 400, 0, -300);
    purpleGradientFill.addColorStop(0, "rgba(157, 74, 199, 0)");
    purpleGradientFill.addColorStop(1, "rgba(157, 74, 199, 0.2)");
  var cumulativeRegistrationsChart = new Chart(
    cumulativeRegistrationsCanvas,
    {
      type: "bar",
      data: {
        labels: registrations.map(key => key[0]),
        datasets: [{
          data: registrations.map(key => key[1]),
          backgroundColor: purpleGradientFill,
          borderColor: "rgba(157, 74, 199, 1)",
          borderWidth:{ top:2, right:0, bottom:0, left:0 },
          hoverBackgroundColor: "rgba(157, 74, 199, 1)",
        },],
      },
      options: {
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        elements: {
          point: {
            radius: 0,
          },
        },
        legend: {
          display: false,
        },
        scales: {
          xAxes: [{
            stacked: true,
            barPercentage: 1,
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
          yAxes: [{
            stacked: true,
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
        },
        tooltips: {
          titleFontFamily: "Roboto",
          bodyFontFamily: "Roboto",
          backgroundColor: "rgb(0, 0, 0)",
          titleFontSize: 16,
          bodyFontSize: 14,
          displayColors: false,
          yPadding: 12,
          xPadding: 12,
          callbacks: {
            label: function(tooltipItem, data) {
              var value = tooltipItem.value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
              value += " registered patients";
              return value;
            },
          },
        }
      }
    }
  );
  // Control rate of all registered HTN patients
  var controlRateOfAllRegisteredPatientsCanvas =
    document.getElementById("controlRateOfAllRegisteredPatients").getContext("2d");
  var controlRateOfAllRegisteredPatientsChart = new Chart(
    controlRateOfAllRegisteredPatientsCanvas,
    {
      type: "line",
      data: {
        labels: controlRate.slice(controlRate.length - 13,controlRate.length - 1).map(key => key[0]),
        lineTension: 0,
        datasets: [{
          backgroundColor: "#ffffff",
          borderColor: "rgba(81, 205, 130, 1)",
          data: controlRate.slice(controlRate.length - 13,controlRate.length - 1).map(key => key[1]),
        }],
      },
      options: {
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        elements: {
          point: {
            radius: 0,
          },
        },
        legend: {
          display: false,
        },
        scales: {
          xAxes: [{
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
          yAxes: [{
            display: false,
            gridLines: {
              display: false,
              drawBorder: false,
            },
          }],
        },
        tooltips: {
          enabled: false,
        }
      }
    }
  );
  // Cohort tooltips
  const barChartNodes = document.querySelectorAll('[data-element="bar-chart"]');
  const tooltipNodes = document.querySelectorAll('[data-element="tooltip"]');
  barChartNodes.forEach(node => {
    const tooltipId = node.getAttribute("data-id");
    node.addEventListener("mouseenter", () => {
      toggleTooltipVisibility(tooltipId);
    });
    node.addEventListener("mouseleave", () => {
      toggleTooltipVisibility(tooltipId);
    });
  });

  function toggleTooltipVisibility(tooltipId) {
    const tooltipNode =
      Array.from(tooltipNodes).find(node => node.getAttribute("data-id") === tooltipId);
    tooltipNode.classList.toggle("hidden");
    tooltipNode.classList.toggle("block");
  }
</script>